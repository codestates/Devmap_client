[{"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/index.js":"1","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/App.js":"2","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/reportWebVitals.js":"3","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/Top.jsx":"4","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/Button.js":"5","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/EccessToLogin.jsx":"6","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/Login.jsx":"7","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/EccessToSignUp.jsx":"8","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/SignUp.jsx":"9","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/module/index.js":"10","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/module/sign.js":"11"},{"size":711,"mtime":1607328649375,"results":"12","hashOfConfig":"13"},{"size":3234,"mtime":1607321115891,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607315425804,"results":"15","hashOfConfig":"13"},{"size":780,"mtime":1607326340840,"results":"16","hashOfConfig":"13"},{"size":677,"mtime":1607322905483,"results":"17","hashOfConfig":"13"},{"size":1304,"mtime":1607326741332,"results":"18","hashOfConfig":"13"},{"size":2665,"mtime":1607317146764,"results":"19","hashOfConfig":"13"},{"size":1282,"mtime":1607325313600,"results":"20","hashOfConfig":"13"},{"size":3513,"mtime":1607325392458,"results":"21","hashOfConfig":"13"},{"size":158,"mtime":1607328360639,"results":"22","hashOfConfig":"13"},{"size":558,"mtime":1607329321848,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jtbvdl",{"filePath":"26","messages":"27","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/index.js",[],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/App.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import EccessToLogin from './components/devmap/EccessToLogin';\n// import EccessToSignUp from './components/devmap/EccessToSignUp';\n// import MyPage from './components/devmap/MyPage';\nimport Top from './components/Top';\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [newNickname, setNewNickname] = useState(\"original nickname\"); // 확인 필요\n  \n  const onEmailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n  const onPasswordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n  const onConfirmPasswordHandler = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n  const onNewPasswordHandler = (e) => {\n    setNewPassword(e.target.value);\n  };\n  const onConfirmNewPasswordHandler = (e) => {\n    setConfirmNewPassword(e.target.value);\n  };\n  const onNicknameHandler = (e) => {\n    setNickname(e.target.value);\n  };\n  const onNewNicknameHandler = (e) => {\n    if (e.target.value !== \"\") {\n        setNewNickname(e.target.value)\n    } else {\n        setNewNickname(\"original nickname\") // 변동 없음\n    }\n  };\n\n  // 인증 관련 작성하기 : 쿠키, 토큰, 세션 등\n\n  const handleLoginStatus =(/*인증 관련 파라미터*/) => {\n    axios\n      .post('')\n      .then(() => {\n        setIsLoggedIn(true);\n        // 인증 상태 변경 작성하기\n        window.location.assign(\"/main\")\n      })\n  };\n\n  const handleLogoutStatus =() => {\n    axios\n    .post('')\n    .then(() => {\n        setIsLoggedIn(false);\n        // 인증 상태 변경 작성하기\n        window.location.assign(\"/main\")\n    })\n  };\n\n  return (\n    <div>\n     \n      <header>\n        <Top></Top>\n      </header>\n      {/* <Route\n        exact path=\"/\"\n        render={() => {\n          <Redirect to='/main' />\n        }}\n      />\n      <Switch>\n        <Route\n          path=\"/login\"\n          render={() => {\n            <EccessToLogin\n              handleLoginStatus={handleLoginStatus}\n              onEmailHandler={onEmailHandler}\n              onPasswordHandler={onPasswordHandler} \n            />\n          }}\n        />\n        <Route\n          path=\"/signup\"\n          render={() => {\n            <EccessToSignUp\n              onEmailHandler={onEmailHandler}\n              onPasswordHandler={onPasswordHandler}\n              onConfirmPasswordHandler={onConfirmPasswordHandler}\n              onNicknameHandler={onNicknameHandler}\n            />\n          }}\n        />\n        <Route\n          path=\"/mypage\"\n          render={() => {\n            <MyPage\n              onNewPasswordHandler={onNewPasswordHandler}\n              onConfirmNewPasswordHandler={onConfirmNewPasswordHandler}\n              onNewNicknameHandler={onNewNicknameHandler}\n            />\n          }}\n        />\n      </Switch> */}\n    </div>\n  );\n}",["70","71"],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/reportWebVitals.js",[],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/Top.jsx",["72","73"],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/Button.js",["74"],"import React from 'react';\n\nimport styled, { css } from 'styled-components';\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  display: inline-flex;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  /* 크기 */\n  height: 2.25rem;\n  font-size: 1rem;\n\n  /* 색상 */\n  background: #228be6;\n  &:hover {\n    background: #339af0;\n  }\n  &:active {\n    background: #1c7ed6;\n  }\n\n  /* 기타 */\n  & + & {\n    margin-left: 1rem;\n  }`;\n\n\nfunction Button({ children, ...rest }) {\n  return <StyledButton {...rest}>{children}</StyledButton>;\n}\n\nexport default Button;","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/EccessToLogin.jsx",[],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/Login.jsx",["75","76"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Login({ handleLoginStatus, onEmailHandler, onPasswordHandler }) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const logInHandler = async () => {\n        if (email === \"\" || password === \"\") {\n            alert(\"email과 password를 입력해 주세요 😉\")\n        } else {\n            const res = await axios.post('', {\n                email: email,\n                password: password\n            })\n\n            if (res.status === 200) {\n                // 인증 관련 파라미터\n                handleLoginStatus();\n            } else {\n                alert(\"email과 password를 다시 한번 확인해 주세요 😧\")\n            }\n        }\n    };\n            \n    return (\n        <div> \n            <div className=\"login\">\n                <div className=\"login-input-area\">\n                    <p className=\"login-email\">email</p>\n                    <input \n                        className=\"login-input-email\"\n                        value={email} \n                        onChange={onEmailHandler} \n                        type=\"email\"\n                        placeholder=\"email을 입력해 주세요\"\n                    />\n                    <p className=\"login-password\">password</p>\n                    <input\n                        className=\"login-input-password\"\n                        value={password}\n                        onChange={onPasswordHandler}\n                        type=\"password\"\n                        placeholder=\"password를 입력해 주세요\"\n                    />\n                </div>\n                <div className=\"login-button-area\">\n                    <button\n                        className=\"login-button\" \n                        onClick={logInHandler}\n                    >로그인\n                    </button>\n                </div>\n                <div className=\"signup-link\">\n                    <Link to='/signup'>\n                        <h3>회원이 아니신가요?</h3>\n                    </Link>\n                </div>\n                <div className=\"login-social-link-naver\">\n                    <Link to=''>\n                        <h3>Naver로 로그인하기</h3>\n                    </Link>\n                </div>\n                <div className=\"login-social-link-daum\">\n                    <Link to=''>\n                        <h3>Daum으로 로그인하기</h3>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Login);","/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/EccessToSignUp.jsx",[],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/components/SignUp.jsx",["77","78","79","80"],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/module/index.js",[],"/Users/imhuichan/Desktop/re/Devmap_client/devmap/src/module/sign.js",[],{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":3,"column":18,"nodeType":"83","messageId":"84","endLine":3,"endColumn":23},{"ruleId":"81","severity":1,"message":"86","line":3,"column":25,"nodeType":"83","messageId":"84","endLine":3,"endColumn":33},{"ruleId":"81","severity":1,"message":"87","line":10,"column":10,"nodeType":"83","messageId":"84","endLine":10,"endColumn":20},{"ruleId":"81","severity":1,"message":"88","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":15},{"ruleId":"81","severity":1,"message":"89","line":13,"column":10,"nodeType":"83","messageId":"84","endLine":13,"endColumn":18},{"ruleId":"81","severity":1,"message":"90","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":25},{"ruleId":"81","severity":1,"message":"91","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":21},{"ruleId":"81","severity":1,"message":"92","line":16,"column":10,"nodeType":"83","messageId":"84","endLine":16,"endColumn":28},{"ruleId":"81","severity":1,"message":"93","line":17,"column":10,"nodeType":"83","messageId":"84","endLine":17,"endColumn":18},{"ruleId":"81","severity":1,"message":"94","line":18,"column":10,"nodeType":"83","messageId":"84","endLine":18,"endColumn":21},{"ruleId":"81","severity":1,"message":"95","line":20,"column":9,"nodeType":"83","messageId":"84","endLine":20,"endColumn":23},{"ruleId":"81","severity":1,"message":"96","line":23,"column":9,"nodeType":"83","messageId":"84","endLine":23,"endColumn":26},{"ruleId":"81","severity":1,"message":"97","line":26,"column":9,"nodeType":"83","messageId":"84","endLine":26,"endColumn":33},{"ruleId":"81","severity":1,"message":"98","line":29,"column":9,"nodeType":"83","messageId":"84","endLine":29,"endColumn":29},{"ruleId":"81","severity":1,"message":"99","line":32,"column":9,"nodeType":"83","messageId":"84","endLine":32,"endColumn":36},{"ruleId":"81","severity":1,"message":"100","line":35,"column":9,"nodeType":"83","messageId":"84","endLine":35,"endColumn":26},{"ruleId":"81","severity":1,"message":"101","line":38,"column":9,"nodeType":"83","messageId":"84","endLine":38,"endColumn":29},{"ruleId":"81","severity":1,"message":"102","line":48,"column":9,"nodeType":"83","messageId":"84","endLine":48,"endColumn":26},{"ruleId":"81","severity":1,"message":"103","line":58,"column":9,"nodeType":"83","messageId":"84","endLine":58,"endColumn":27},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"81","severity":1,"message":"108","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"109","line":5,"column":18,"nodeType":"83","messageId":"84","endLine":5,"endColumn":21},{"ruleId":"81","severity":1,"message":"109","line":3,"column":18,"nodeType":"83","messageId":"84","endLine":3,"endColumn":21},{"ruleId":"81","severity":1,"message":"110","line":6,"column":19,"nodeType":"83","messageId":"84","endLine":6,"endColumn":27},{"ruleId":"81","severity":1,"message":"111","line":7,"column":22,"nodeType":"83","messageId":"84","endLine":7,"endColumn":33},{"ruleId":"81","severity":1,"message":"110","line":6,"column":19,"nodeType":"83","messageId":"84","endLine":6,"endColumn":27},{"ruleId":"81","severity":1,"message":"111","line":7,"column":22,"nodeType":"83","messageId":"84","endLine":7,"endColumn":33},{"ruleId":"81","severity":1,"message":"112","line":8,"column":29,"nodeType":"83","messageId":"84","endLine":8,"endColumn":47},{"ruleId":"81","severity":1,"message":"113","line":9,"column":22,"nodeType":"83","messageId":"84","endLine":9,"endColumn":33},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Redirect' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","'confirmNewPassword' is assigned a value but never used.","'nickname' is assigned a value but never used.","'newNickname' is assigned a value but never used.","'onEmailHandler' is assigned a value but never used.","'onPasswordHandler' is assigned a value but never used.","'onConfirmPasswordHandler' is assigned a value but never used.","'onNewPasswordHandler' is assigned a value but never used.","'onConfirmNewPasswordHandler' is assigned a value but never used.","'onNicknameHandler' is assigned a value but never used.","'onNewNicknameHandler' is assigned a value but never used.","'handleLoginStatus' is assigned a value but never used.","'handleLogoutStatus' is assigned a value but never used.","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"'Button' is defined but never used.","'css' is defined but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'setNickname' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]